@misc{Scott2014a,
author = {Scott, Ezequiel and Rodr{\'{i}}guez, Guillermo and Soria, {\'{A}}lvaro and Campo, Marcelo},
booktitle = {Overcoming Challenges in Software Engineering Education},
doi = {10.4018/978-1-4666-5800-4.ch013},
title = {{Experiences in Software Engineering Education}},
year = {2014}
}
@inproceedings{Scott2013,
abstract = {Resumen El creciente uso de Scrum en la industria ha alentado a las universidades a reorientar los cursos de Ingenier{\'{i}}a de Software con el fin de preparar a los estudiantes para su futuro profesional. La tendencia para ense{\~{n}}ar Scrum es dise{\~{n}}ar cursos basados en proyectos pilotos. El problema aqu{\'{i}} es la gran cantidad de informaci{\'{o}}n generada en el proceso de ense{\~{n}}anza que dificulta la tarea del docente para conocer el tipo de preferencias de los estudiantes cuando aprenden y c{\'{o}}mo se relacionan con las pr{\'{a}}cticas que realizan. Para ello, el uso del estilo de aprendizaje aparece como un recurso a ser explorado que contribuye a descubrir las preferencias de los estudiantes cuando aprenden. El objetivo de este trabajo es analizar si existen relaciones entre las pr{\'{a}}cticas que realizan los estudiantes y su estilo de aprendizaje. Hemos usados datos recolectados de un curso de Ingenier{\'{i}}a de Software de la UNICEN y los resultados validan nuestras hip{\'{o}}tesis sobre la existencia de dichas relaciones. En particular se destaca la influencia de la dimensi{\'{o}}n de Procesamiento de la informaci{\'{o}}n del modelo de Felder-Silverman sobre la forma de estimar User Stories, como as{\'{i}} tambi{\'{e}}n, el seguimiento de procesos y tiempo de realizaci{\'{o}}n de tareas. Palabras clave:},
author = {Scott, Ezequiel and Rodr$\backslash$'$\backslash$iguez, Guillermo Horacio and Soria, {\'{A}}lvaro and Campo, Marcelo},
booktitle = {XIV Simposio Argentino de Ingenier{\{}$\backslash$'$\backslash$i{\}}a de Software (ASSE)-JAIIO 42 (2013)},
month = {sep},
title = {{El rol del estilo de aprendizaje en la ense{\~{n}}anza de pr{\'{a}}cticas de scrum: Un enfoque estad{\{}$\backslash$'$\backslash$i{\}}stico}},
year = {2013}
}
@article{scott2016taxonomy,
abstract = {Service Oriented Computing is a relevant paradigm that allows for building software solutions as it supports the creation of dynamic and agile applications. As a result of these benefits, applications based on the paradigm are commonly used in the industry. However, the more complex software solutions become, the higher the chance of having bugs is. Identifying them in the entire solution may also be one of the most tedious, expensive and time-consuming activity within the developing process. Therefore, fault localization aims at finding the location of faults, determining the root cause of the failure and identifying the causes of abnormal behavior of a faulty program. In particular, fault localization for service oriented applications is currently a research field that has received little attention. In this context, we present a taxonomy-based approach for fault localization in service oriented applications, using information of faults in the underlying architecture of these applications, namely SOA. The results on the location of faults are not only provided to the developer but also enhanced with architectural information, that is, showing the faults and their connection with exceptions, code and architectural scenarios. The experimental results carried out indicate that developers reduce their effort of localizing faults in terms of time and lines of code.},
author = {Scott, Ezequiel and Soria, Alvaro and Campo, Marcelo},
doi = {10.1109/TLA.2016.7530432},
issn = {15480992},
journal = {IEEE Latin America Transactions},
keywords = {Fault locatization,Service oriented,Taxonomy},
number = {5},
pages = {2348--2354},
publisher = {IEEE},
title = {{A Taxonomy-based Approach for Fault Localization in Service-Oriented Applications}},
volume = {14},
year = {2016}
}
@inproceedings{kilu2019agile,
abstract = {A large shift towards the use of agile software development in different industrial sectors is evident nowadays. Financial institutions are not unfamiliar with this tendency since they have the need to respond faster to the changes in their business environments. This is partly due to the new generation of financial technology (fintech) companies that have shown a significant difference in time to market and in speeding up software development. To compete with fintech companies, financial institutions are looking for improving their software development processes focusing on applying agile practices in a better way. This article presents a set of proposals to improve software development in the LHV Bank. The set of proposals has been determined through a literature review and interviews conducted in two leading financial institutions and two fintech companies. The analysis done allowed us to understand the best practices that are currently being applied, how they are implemented, and which ones are suitable for application in LHV Bank.},
author = {Kilu, Erki and Milani, Fredrik and Scott, Ezequiel and Pfahl, Dietmar},
booktitle = {Lecture Notes in Business Information Processing},
doi = {10.1007/978-3-030-05767-1_5},
isbn = {9783030057664},
issn = {18651348},
keywords = {Agile software development,Financial institutions,Fintech companies,Software process improvement},
organization = {Springer},
pages = {57--69},
title = {{Agile Software Process Improvement by Learning from Financial and Fintech Companies: LHV Bank Case Study}},
volume = {338},
year = {2019}
}
@article{scottlocalizacion,
author = {Scott, Ezequiel},
journal = {41 JAIIO - Concurso de Trabajos Estudiantiles EST 2012},
title = {{Un Sistema de Reglas para Asistir en la Localizaci{\'{o}}n de Fallas en Aplicaciones Orientadas a Servicios}},
year = {2012}
}
@inproceedings{rodriguez2014razonamiento,
abstract = {Resumen La Arquitectura Orientada a Servicios (SOA) se ha conver-tido en un paradigma dominante para el desarrollo software distribuido. La mayor{\'{i}}a de las organizaciones explotan SOA mediante el descubrim-iento y la reutilizaci{\'{o}}n de servicios accesible a trav{\'{e}}s de Internet. Sin embargo, determinadas organizaciones necesitan el control interno de las aplicaciones e implementarlas con determinados atributos de calidad. La implementaci{\'{o}}n de una SOA teniendo en cuenta atributos de calidad (por ejemplo, performance, interoperabilidad, seguridad, etc.) requiere que los dise{\~{n}}adores exploren soluciones alternativas; esto resulta una tarea que consume mucho tiempo y es propensa a errores, incluso para dise{\~{n}}adores expertos. La elecci{\'{o}}n de una alternativa de implementaci{\'{o}}n que no tiene en cuenta los principales atributos de calidad del sistema puede dar lugar a desajustes entre el comportamiento prescrito por la arquitectura y el exhibido durante su ejecuci{\'{o}}n real, con un impacto negativo en el software. Esta elecci{\'{o}}n es realizada a menudo por expertos que generalmente buscan soluciones ya existentes que han sido adecuadas en contextos simi-lares. Por este motivo, este trabajo propone un enfoque de Razonamiento Basado en Casos (CBR) para asistir a los dise{\~{n}}adores en la exploraci{\'{o}}n de alternativas de dise{\~{n}}o de una SOA, que utiliza el conocimiento sobre los atributos de calidad como las principales gu{\'{i}}as de materializaci{\'{o}}n hacia dise{\~{n}}os detallados orientados a objetos. Los resultados preliminares sobre un caso de estudio demuestran la viabilidad del enfoque propuesto. Palabras Claves: Arquitecturas Orientas a Servicios; Razonamiento Basado en Casos; Atributos de Calidad; Materializaci{\'{o}}n de Arquitecturas.},
author = {Rodr{\'{i}}guez, Guillermo and Scott, Ezequiel and Soria, {\'{A}}lvaro},
booktitle = {XLIII Jornadas Argentinas de Inform{\'{a}}tica e Investigaci{\'{o}}n Operativa (43JAIIO)-XV Argentine Symposium on Artificial Intelligence (ASAI)(Buenos Aires, 2014)},
keywords = {arquitecturas orientas a servicios,atributos de calidad,basado en casos,materializaci{\'{o}}n de arquitecturas,razonamiento,s},
pages = {35--42},
title = {{Razonamiento Basado en Casos para la Materializaci{\'{o}}n de Arquitecturas Orientadas a Servicios}},
url = {http://www.uml.org/},
year = {2014}
}
@inproceedings{Scott2020a,
author = {Scott, Ezequiel and Charkie, Khaled Nimr and Pfahl, Dietmar},
booktitle = {Proceedings of the Euromicro Conference on Software Engineeringand Advanced Applications (SEAA)},
title = {{Productivity, Turnover, and Team Stability of Agile Teams in Open-Source Software Projects}},
year = {2020}
}
@inbook{Scott2020,
author = {Scott, Ezequiel and Milani, Fredrik and Pfahl, Dietmar},
booktitle = {Contemporary Empirical Methods in SoftwareEngineering},
chapter = {Data Scien},
editor = {Felderer, Michael and {Horta Travassos}, Guilherme},
pages = {217--234},
publisher = {Springer},
title = {{Data Science and Empirical Software Engineering}},
year = {2020}
}
@article{scott2016adaptive,
abstract = {New ways of learning have emerged in the last years by using computers in education. For instance, many Virtual Learning Environments have been widely adopted by educators, obtaining promising outcomes. Recently, these environments have evolved into more advanced ones using 3D technologies and taking into account the individual learner needs and preferences. This focus has led a shift to more personalized learning approaches, requiring that the environments adapt themselves to the learner. Then, many adaptive 3D environments have explored adaptive features to create new and enhanced learning experiences in different contexts. However, very little is known about both what factors are involved with adaptive 3D environments to achieve learning benefits and what assessment factors are present in current studies. For this reason, this review analyzes the recent publications on Adaptive 3D Virtual Learning Environments. Findings have revealed that these environments have covered factors on defining the learner's model, the instructional strategies and contents, and the adaptations mechanisms. Nearly half of the environments have addressed thorough assessments whereas the rest has not reported any evaluation at all. Moreover, when they report assessment, promising outcomes have also been shown not only in multiple domains of knowledge but also at various stages of education. These findings indicate that the field of Adaptive 3D Virtual Learning Environments is an active and ongoing area, and this study highlights several promising directions and suggestions for future research.},
author = {Scott, Ezequiel and Soria, Alvaro and Campo, Marcelo},
doi = {10.1109/TLT.2016.2609910},
issn = {19391382},
journal = {IEEE Transactions on Learning Technologies},
keywords = {3D virtual learning environments,Adaptive virtual environments,personalized virtual environments},
number = {3},
pages = {262--276},
publisher = {IEEE},
title = {{Adaptive 3D Virtual Learning Environments - A Review of the Literature}},
volume = {10},
year = {2017}
}
@inproceedings{scott2018using,
abstract = {Effort estimation is important to correctly plan the use of resources in a software project. In agile projects, a correct effort estimation helps decide which issues have to be fixed or finished during the next iteration. However, estimating issues can be a complex task and developers may make inaccurate estimates. Therefore, the use of automatic approaches that aim to support developers in the estimation process is worth to be studied. We explore the use of a predictive model that use developers' features to assign story points to issue reports. The performance of the model is compared with the performance of models based on features extracted from the text of issues. We assessed the models with different performance metrics including Accuracy, Mean Absolute Error, and Standardized Accuracy. The preliminary results show that the model that uses developers' features sightly outperforms the models based on text features, indicating a promising research direction.},
author = {Scott, Ezequiel and Pfahl, Dietmar},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3202710.3203160},
isbn = {9781450364591},
keywords = {Agile Software Development,Effort Estimation,Machine Learning},
organization = {ACM},
pages = {106--110},
title = {{Using developers' features to estimate story points}},
year = {2018}
}
@inproceedings{scott2017exploring,
abstract = {Scrum based software development has become increasingly popular in recent years. Scrum requires teams following agile practices and their principles. One of them includes having room for the reflection of the team on how to become more effective. In this context, measuring and enhancing the performance of teams is still an area of interest for the Scrum community. Traditional Scrum metrics have often been used to measure the performance and productivity; however, individual contributions of team members to the project are often shaded by the team overall performance. In this paper, we propose a metric for measuring individual differences in project progress based on the traditional Burndown chart. We also show preliminary results of applying it in a particular training context, highlighting how learning-styles based instruction can improve the individual project progress of students.},
author = {Scott, Ezequiel and Pfahl, Dietmar},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-319-69926-4_24},
isbn = {9783319699257},
issn = {16113349},
keywords = {Agile metrics,Agile software development,Scrum},
organization = {Springer},
pages = {341--348},
title = {{Exploring the individual project progress of scrum software developers}},
volume = {10611 LNCS},
year = {2017}
}
@inproceedings{scott2013rol,
author = {Scott, Ezequiel and Rodr$\backslash$'$\backslash$iguez, Guillermo Horacio and Soria, {\'{A}}lvaro and Campo, Marcelo},
booktitle = {XIV Simposio Argentino de Ingenier{\{}$\backslash$'$\backslash$i{\}}a de Software (ASSE)-JAIIO 42 (2013)},
title = {{El rol del estilo de aprendizaje en la ense{\~{n}}anza de pr{\'{a}}cticas de scrum: Un enfoque estad{\{}$\backslash$'$\backslash$i{\}}stico}},
year = {2013}
}
@inproceedings{robiolo2019technical,
abstract = {Background: To adequately attend to non-functional requirements (NFRs), they must be documented; otherwise, developers would not know about their existence. However, the documentation of NFRs may be subject to Technical Debt and Waste, as any other software artefact. Aims: The goal is to explore indicators of potential Technical Debt and Waste in NFRs documentation. Method: Based on a subset of data acquired from the most recent NaPiRE (Naming the Pain in Requirements Engineering) survey, we calculate, for a standard set of NFR types, how often respondents state they document a specific type of NFR when they also state that it is important. This allows us to quantify the occurrence of potential Technical Debt and Waste. Results: Based on 398 survey responses, four NFR types (Maintainability, Reliability, Usability, and Performance) are labelled as important but they are not documented by more than 22{\%} of the respondents. We interpret that these NFR types have a higher risk of Technical Debt than other NFR types. Regarding Waste, 15{\%} of the respondents state they document NFRs related to Security and they do not consider it important. Conclusions: There is a clear indication that there is a risk of Technical Debt for a fixed set of NFRs since there is a lack of documentation of important NFRs. The potential risk of incurring Waste is also present but to a lesser extent.},
archivePrefix = {arXiv},
arxivId = {1909.12716},
author = {Robiolo, Gabriela and Scott, Ezequiel and Matalonga, Santiago and Felderer, Michael},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-030-35333-9_16},
eprint = {1909.12716},
isbn = {9783030353322},
issn = {16113349},
keywords = {Non functional requirements,Technical Debt,Waste},
organization = {Springer, Cham},
pages = {220--235},
title = {{Technical Debt and Waste in Non-functional Requirements Documentation: An Exploratory Study}},
volume = {11915 LNCS},
year = {2019}
}
@incollection{scott2014experiences,
abstract = {Software Engineering courses aim to train students to succeed in meeting the challenges within competitive and ever-changing professional contexts. Thus, undergraduate courses require continual revision and updating so as to cater for the demands of the software industry and guarantee academic quality. In this context, Scrum results in both a suitable and a flexible framework to train students in the implementation of professional software engineering practices. However, current approaches fail to provide guidance and assistance in applying Scrum, or a platform to address limitations in time, scope, and facilities within university premises. In this chapter, the authors present a software engineering training model based on the integration of the Agile Coach role and a virtual-reality platform called Virtual Scrum. The findings highlight the benefits of integrating this innovative model in a capstone course. Not only does this approach strengthen the acquisition of current software engineering practices but also opens new possibilities in the design of training courses.},
author = {Scott, Ezequiel and Rodr{\'{i}}guez, Guillermo and Soria, {\'{A}}lvaro and Campo, Marcelo},
booktitle = {Computer Systems and Software Engineering: Concepts, Methodologies, Tools, and Applications},
doi = {10.4018/978-1-5225-3923-0.ch050},
isbn = {9781522539247},
pages = {1257--1283},
publisher = {IGI Global},
title = {{Experiences in software engineering education: Using scrum, agile coaching, and virtual reality}},
year = {2017}
}
@inproceedings{scott2017initial,
abstract = {The way how software is developed in industry has considerably changed with the advent of the agile development paradigm about 20 years ago. The HELENA initiative tries to investigate the current state of practice in software and system development. This paper reports about initial results of an online survey that was conducted in 26 countries simultaneously, focusing on results from Estonia and comparing these results with results from Sweden as well as with the joint results from all participating countries worldwide.},
author = {Scott, Ezequiel and Pfahl, Dietmar and Hebig, Regina and Heldal, Rogardt and Knauss, Eric},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-319-69926-4_29},
isbn = {9783319699257},
issn = {16113349},
keywords = {Agile software development,HELENA,Survey},
organization = {Springer},
pages = {404--412},
title = {{Initial results of the HELENA survey conducted in Estonia with comparison to results from Sweden and worldwide}},
volume = {10611 LNCS},
year = {2017}
}
@article{10.1016/j.jss.2015.10.022,
abstract = {Considerable attention has been paid to teaching Scrum in software engineering education as an academic response to the software industry's demands. In order to reinforce and strengthen the understanding of Scrum concepts, professors should personalize the learning process, catering for students' individual learning characteristics. To address this issue, learning styles become effective to understand students' different ways of learning. In this context, the meshing hypothesis claims that when both teaching and learning styles are aligned, the students' learning experience is enhanced. However, the literature fails to evidence support for the meshing hypothesis in the context of software engineering education. We aim to corroborate the meshing hypothesis by using teaching strategies matching the Felder-Silverman Learning Style Model in a Scrum course. Based on previous findings, we focused on the processing dimension of the model. To validate our approach, two experiments were conducted in an undergraduate software engineering course in the academic years 2013 and 2014. We provided students with a Scrum class by applying teaching strategies suiting students' learning style. Test results corroborate that students' outcomes improved when receiving the strategy that match their learning styles. Our data highlight opportunities for improving software engineering education by considering the students' learning preferences.},
address = {USA},
author = {Scott, Ezequiel and Rodr{\'{i}}guez, Guillermo and Soria, {\'{A}}lvaro and Campo, Marcelo},
doi = {10.1016/j.jss.2015.10.022},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Agile software development,Learning styles,Software engineering education},
month = {jan},
number = {C},
pages = {242--253},
publisher = {Elsevier Science Inc.},
title = {{Towards better Scrum learning using learning styles}},
url = {https://doi.org/10.1016/j.jss.2015.10.022},
volume = {111},
year = {2016}
}
@article{Scott2014,
abstract = {Teaching agile practices is in the cutting-edge of Software Engineering education since agile methodologies are widely used in the industry. An effective strategy to teach agile practices is the use of a capstone project, in which students develop requirements following an agile methodology. To improve students' learning experience, professors have to keep track and analyze the information generated by the students during the capstone project development. The problem here arises from the large amount of information generated in the learning process, which hinders professors to meet each student's learning profile. Particularly, to know the students skills and preferences are key aspects on a learner-centered approach of education in order to personalize the teaching. In this work, we aim to discover the relationships between students' performance along a Scrum-based capstone project and their learning style according to the Felder-Silverman model, towards a first step to build the profiles. To address this issue, we mined association rules from the interaction of 33 Software Engineering students with Virtual Scrum, a tool that supports the development of the capstone project in the course. In the present work we describe promising results in experiments with a case-study. {\textcopyright} 2014 Elsevier Ltd. All rights reserved.},
author = {Scott, Ezequiel and Rodr{\'{i}}guez, Guillermo and Soria, {\'{A}}lvaro and Campo, Marcelo},
doi = {10.1016/j.chb.2014.03.027},
issn = {07475632},
journal = {Computers in Human Behavior},
keywords = {Agile software development,Learning styles,Software Engineering,Software Engineering education},
pages = {56--64},
publisher = {Elsevier Ltd},
title = {{Are learning styles useful indicators to discover how students use Scrum for the first time?}},
url = {http://dx.doi.org/10.1016/j.chb.2014.03.027},
volume = {36},
year = {2014}
}
